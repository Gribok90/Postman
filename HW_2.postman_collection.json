{
	"info": {
		"_postman_id": "bc73e9cb-c1a6-4492-89d4-a1b67697f8b6",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23954183"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_string = pm.response.text()\r",
							"console.log(resp_string)\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(resp_string).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/first",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_body = pm.response.json()\r",
							"let req_data = request.data\r",
							"\r",
							"console.log(resp_body)\r",
							"console.log(req_data)\r",
							"console.log(resp_body.family)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Chek_name\", function () {\r",
							"    pm.expect(resp_body.name).to.eql(\"Gribok\");\r",
							"});\r",
							"pm.test(\"Chek_age\", function () {\r",
							"    pm.expect(resp_body.age).to.eql(\"32\");\r",
							"});\r",
							"pm.test(\"Chek_salary\", function () {\r",
							"    pm.expect(resp_body.salary).to.eql(1000);\r",
							"});\r",
							"pm.test(\"Chek_name_request\", function () {\r",
							"    pm.expect(resp_body.name).to.eql(req_data.name);\r",
							"});\r",
							"pm.test(\"Chek_age_request\", function () {\r",
							"    pm.expect(resp_body.age).to.eql(req_data.age);\r",
							"});\r",
							"pm.test(\"Chek_salary_request\", function () {\r",
							"    pm.expect(resp_body.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"pm.test(\"Check_salary_1.5_year\", function () {\r",
							"    var resp_salary_1_5_year = resp_body.family.u_salary_1_5_year\r",
							"    pm.expect((+req_data.salary)*4).to.eql(resp_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Gribok",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_body = pm.response.json()\r",
							"let req_param = pm.request.url.query.toObject()\r",
							"\r",
							"console.log(resp_body)\r",
							"console.log(req_param)\r",
							"console.log(resp_body.family)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Chek_name\", function () {\r",
							"    pm.expect(resp_body.name).to.eql(req_param.name);\r",
							"});\r",
							"pm.test(\"Chek_age\", function () {\r",
							"    pm.expect(resp_body.age).to.eql(req_param.age);\r",
							"});\r",
							"pm.test(\"Chek_salary\", function () {\r",
							"    pm.expect(resp_body.salary).to.eql(+req_param.salary);\r",
							"});\r",
							"pm.test(\"Have 'name' property in 'dog' param\", function () {\r",
							"    pm.expect(resp_body.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"pm.test(\"Have 'age' property in 'dog' param\", function () {\r",
							"    pm.expect(resp_body.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"pm.test(\"Check_dog_name\", function () {\r",
							"    pm.expect(resp_body.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"pm.test(\"Check_dog_age\", function () {\r",
							"    pm.expect(resp_body.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Gribok&age=32&salary=800",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Gribok"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "800"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_body = pm.response.json()\r",
							"let req_param = pm.request.url.query.toObject()\r",
							"\r",
							"console.log(resp_body.salary)\r",
							"console.log(+req_param.salary)\r",
							"console.log(resp_body.salary[0])\r",
							"console.log(resp_body.salary[1])\r",
							"console.log(resp_body.salary[2])\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Chek_name\", function () {\r",
							"    pm.expect(resp_body.name).to.eql(req_param.name);\r",
							"});\r",
							"pm.test(\"Chek_age\", function () {\r",
							"    pm.expect(resp_body.age).to.eql(+req_param.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Chek_salary_0\", function () {\r",
							"    pm.expect(resp_body.salary[0]).to.eql(+req_param.salary);\r",
							"});\r",
							"pm.test(\"Chek_salary_1\", function () {\r",
							"    pm.expect(+resp_body.salary[1]).to.eql(+req_param.salary * 2);\r",
							"});\r",
							"pm.test(\"Chek_salary_1\", function () {\r",
							"    pm.expect(+resp_body.salary[2]).to.eql(+req_param.salary * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", resp_body.name)\r",
							"pm.environment.set(\"age\", resp_body.age)\r",
							"pm.environment.set(\"salary\", resp_body.salary[0])\r",
							"\r",
							"for (let i in resp_body.salary){\r",
							"    console.log(+resp_body.salary[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Gribok&age=32&salary=800",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Gribok"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "800"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_data = request.data\r",
							"let resp_body = pm.response.json()\r",
							"\r",
							"// console.log(req_data)\r",
							"// console.log(resp_body)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Have start_qa_salary property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('start_qa_salary');\r",
							"});\r",
							"pm.test(\"Have qa_salary_after_6_months property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"pm.test(\"Have qa_salary_after_12_months property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"pm.test(\"Have qa_salary_after_1.5_year property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"pm.test(\"Have qa_salary_after_3.5_years property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"pm.test(\"Have person property\", function () {\r",
							"    pm.expect(resp_body).to.have.property('person');\r",
							"});\r",
							"pm.test(\"Check_start_qa_salary\", function () {\r",
							"    pm.expect(resp_body.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"pm.test(\"Check_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_body.qa_salary_after_6_months).to.eql(+req_data.salary * 2);\r",
							"});\r",
							"pm.test(\"Check_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_body.qa_salary_after_12_months).to.eql(+req_data.salary * 2.7);\r",
							"});\r",
							"pm.test(\"Check_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_body[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary * 3.3);\r",
							"});\r",
							"pm.test(\"Check_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_body[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary * 3.8);\r",
							"});\r",
							"pm.test(\"Check_u_name_1\", function () {\r",
							"    pm.expect(resp_body.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"pm.test(\"Check_u_age\", function () {\r",
							"    pm.expect(resp_body.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"pm.test(\"Check_u_salary_5_years\", function () {\r",
							"    pm.expect(resp_body.person.u_salary_5_years).to.eql(+req_data.salary * 4.2);\r",
							"});\r",
							"\r",
							"for (let i in resp_body.person){\r",
							"    console.log(resp_body.person[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}